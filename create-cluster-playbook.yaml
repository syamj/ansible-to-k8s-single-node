---
- hosts: "nodes"
  remote_user: ubuntu
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes

  tasks:

   - name: Check kubernetes status.
     command: kubectl cluster-info
     register: kubernetes_status
     changed_when: false
     ignore_errors: true

   
   - name: Make the Swap inactive
     command: swapoff -a

   - name: Remove Swap entry from /etc/fstab.
     lineinfile:
       dest: /etc/fstab
       regexp: swap
       state: absent

   - name: Create a empty file for containerd module.
     copy:
       content: ""
       dest: /etc/modules-load.d/containerd.conf
       force: no

   - name: Configure module for containerd.
     blockinfile:
       path: /etc/modules-load.d/containerd.conf 
       block: |
            overlay
            br_netfilter

   - name: Create a empty file for kubernetes sysctl params.
     copy:
       content: ""
       dest: /etc/sysctl.d/99-kubernetes-cri.conf
       force: no

   - name: Configure sysctl params for Kubernetes.
     lineinfile:
       path: /etc/sysctl.d/99-kubernetes-cri.conf 
       line: "{{ item }}"
     with_items:
       - 'net.bridge.bridge-nf-call-iptables  = 1'
       - 'net.ipv4.ip_forward                 = 1'
       - 'net.bridge.bridge-nf-call-ip6tables = 1'

   - name: Apply sysctl params without reboot.
     command: sysctl --system

   - name: Installing Prerequisites for Kubernetes
     apt: 
       name:
         - apt-transport-https
         - ca-certificates
         - curl
         - gnupg-agent
         - vim
         - software-properties-common
       state: present

   - name: Add Dockerâ€™s official GPG key
     apt_key:
       url: https://download.docker.com/linux/ubuntu/gpg
       state: present

   - name: Add Docker Repository
     apt_repository:
       repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
       state: present
       filename: docker
       update_cache: yes

   - name: Install containerd.
     apt: 
       name:
         - containerd.io
       state: present
     register: install_containerd_result

   - name: Configure containerd.
     file:
       path: /etc/containerd
       state: directory

   - name: Configure containerd.
     shell: /usr/bin/containerd config default > /etc/containerd/config.toml

   - name: Enable containerd service, and start it.
     systemd: 
       name: containerd
       state: restarted
       enabled: yes
       daemon-reload: yes

   - name: Add Google official GPG key
     apt_key:
       url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
       state: present

   - name: Add Kubernetes Repository
     apt_repository:
       repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
       state: present
       filename: kubernetes
       mode: 0600

   - name: Installing Kubernetes Cluster Packages.
     apt: 
       name:
         - kubeadm
         - kubectl
         - kubelet
       state: present

   - name: Enable service kubelet, and enable persistently
     service: 
       name: kubelet
       enabled: yes

   - name: restart machine
     shell: 'sleep 2 && shutdown -r now "Ansible updates triggered"'
     async: 1
     poll: 0
     ignore_errors: true
     when: install_containerd_result is changed

   - pause: seconds=45
     when: install_containerd_result is changed

#   - name: Reboot all the kubernetes nodes.
#     reboot:
#       post_reboot_delay: 50
#       reboot_timeout: 160
#       connect_timeout: 180
#       test_command: uptime

   - name: Intilizing Kubernetes Cluster
     command: kubeadm init --pod-network-cidr=10.244.0.0/16
     run_once: true
     when: "not kubernetes_status.stdout or 'running' not in kubernetes_status.stdout"

   - pause: seconds=30

   - name: Create directory for kube config.
     become_user: ubuntu
     become_method: sudo
     become: yes
     file: 
       path: /home/ubuntu/.kube
       state: directory
       owner: "ubuntu"
       group: "ubuntu"
       mode: 0755

   - name: Copy /etc/kubernetes/admin.conf to user home directory /home/ubuntu/.kube/config.
     become_user: root
     become_method: sudo
     become: yes
     copy:
       src: /etc/kubernetes/admin.conf
       dest: /home/ubuntu/.kube/config
       remote_src: yes
       owner: "ubuntu"
       group: "ubuntu"
       mode: '0644'

   - pause: seconds=10

   - name: Remove the cache directory.
     become_user: ubuntu
     become_method: sudo
     become: yes
     file: 
       path: /home/ubuntu/.kube/cache
       state: absent

   - name: Create Pod Network & Untaint Node
     become_user: ubuntu
     become_method: sudo
     become: yes
     command: "{{ item }}"
     with_items: 
        - kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml
        - kubectl taint nodes --all node-role.kubernetes.io/master-

   - pause: seconds=30

   - name: Get the token for joining the nodes with Kuberentes master.
     shell: kubeadm token create  --print-join-command
     register: kubernetes_join_command

   - debug:
       msg: "{{ kubernetes_join_command.stdout }}"

   - name: Copy join command to local file.
     become: false
     local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777


   - name: Configure kubectl command auto completion.
     lineinfile:
       dest: /home/ubuntu/.bashrc
       line: 'source <(kubectl completion bash)'
       insertafter: EOF

